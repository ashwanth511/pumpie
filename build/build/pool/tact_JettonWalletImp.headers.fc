;;
;; Header files for JettonWalletImp
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) impure inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) impure inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $JettonTransfer$_load
(slice, ((int, int, slice, slice, cell, int, slice))) $JettonTransfer$_load(slice sc_0) inline_ref;

;; $JettonTransferNotification$_store
builder $JettonTransferNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $JettonTransferNotification$_store_cell
cell $JettonTransferNotification$_store_cell((int, int, slice, slice) v) inline;

;; $JettonBurn$_load
(slice, ((int, int, slice, cell))) $JettonBurn$_load(slice sc_0) inline;

;; $JettonExcesses$_store
builder $JettonExcesses$_store(builder build_0, (int) v) inline;

;; $JettonExcesses$_store_cell
cell $JettonExcesses$_store_cell((int) v) inline;

;; $JettonInternalTransfer$_store
builder $JettonInternalTransfer$_store(builder build_0, (int, int, slice, slice, int, slice) v) inline_ref;

;; $JettonInternalTransfer$_store_cell
cell $JettonInternalTransfer$_store_cell((int, int, slice, slice, int, slice) v) inline;

;; $JettonInternalTransfer$_load
(slice, ((int, int, slice, slice, int, slice))) $JettonInternalTransfer$_load(slice sc_0) inline_ref;

;; $JettonInternalTransfer$_load_bounced
(slice, ((int, int))) $JettonInternalTransfer$_load_bounced(slice sc_0) inline;

;; $JettonBurnNotification$_store
builder $JettonBurnNotification$_store(builder build_0, (int, int, slice, slice) v) inline;

;; $JettonBurnNotification$_store_cell
cell $JettonBurnNotification$_store_cell((int, int, slice, slice) v) inline;

;; $JettonBurnNotification$_load_bounced
(slice, ((int, int))) $JettonBurnNotification$_load_bounced(slice sc_0) inline;

;; $JettonWalletImp$_store
builder $JettonWalletImp$_store(builder build_0, (int, slice, slice) v) inline;

;; $JettonWalletImp$_load
(slice, ((int, slice, slice))) $JettonWalletImp$_load(slice sc_0) inline;

;; $StateInit$_get_code
_ $StateInit$_get_code((cell, cell) v) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $WalletData$_to_external
(int, slice, slice, cell) $WalletData$_to_external(((int, slice, slice, cell)) v) inline;

;; $JettonWalletImp$init$_store
builder $JettonWalletImp$init$_store(builder build_0, (slice, slice) v) inline;

;; $JettonWalletImp$init$_load
(slice, ((slice, slice))) $JettonWalletImp$init$_load(slice sc_0) inline;

;; $JettonWalletImp$_contract_init
(int, slice, slice) $JettonWalletImp$_contract_init(slice $owner, slice $jetton_master) impure inline_ref;

;; $JettonWalletImp$_contract_load
(int, slice, slice) $JettonWalletImp$_contract_load() impure inline_ref;

;; $JettonWalletImp$_contract_store
() $JettonWalletImp$_contract_store((int, slice, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
int $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int $bounce, slice $to, int $value, int $mode, cell $body, cell $code, cell $data) inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice $to, int $value, int $bounce, int $mode, cell $body, cell $code, cell $data) inline;

;; $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload
((int, int, slice, slice, int, slice)) $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload(int $query_id, int $amount, slice $response_address, slice $from, int $forward_ton_amount, slice $forward_payload) inline;

;; $JettonWalletImp$_init_child
(cell, cell) $JettonWalletImp$_init_child(cell sys', slice $owner, slice $jetton_master) inline_ref;

;; $JettonWalletImp$_fun_calculate_jetton_wallet_init
((int, slice, slice), (cell, cell)) $JettonWalletImp$_fun_calculate_jetton_wallet_init((int, slice, slice) $self, slice $owner_address) impure inline;

;; $JettonWalletImp$_fun_forward
((int, slice, slice), ()) $JettonWalletImp$_fun_forward((int, slice, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $JettonWalletImp$_fun_notify
((int, slice, slice), ()) $JettonWalletImp$_fun_notify((int, slice, slice) $self, cell $body) impure inline;

;; $JettonWalletImp$_fun__transfer_validate
((int, slice, slice), ()) $JettonWalletImp$_fun__transfer_validate((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $JettonWalletImp$_fun__burn_validate
((int, slice, slice), ()) $JettonWalletImp$_fun__burn_validate((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, cell) $msg) impure inline;

;; $JettonWalletImp$_fun__transfer_estimate_remain_value
((int, slice, slice), ()) $JettonWalletImp$_fun__transfer_estimate_remain_value((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $JettonWalletImp$_fun__transfer_jetton
((int, slice, slice), ()) $JettonWalletImp$_fun__transfer_jetton((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, cell, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice $to, int $value, int $mode, int $bounce, cell $body) inline;

;; $JettonBurnNotification$_constructor_query_id_amount_sender_response_destination
((int, int, slice, slice)) $JettonBurnNotification$_constructor_query_id_amount_sender_response_destination(int $query_id, int $amount, slice $sender, slice $response_destination) inline;

;; $JettonWalletImp$_fun__burn_tokens
((int, slice, slice), ()) $JettonWalletImp$_fun__burn_tokens((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, cell) $msg) impure inline;

;; $JettonWalletImp$_fun__internal_transfer_validate
((int, slice, slice), ()) $JettonWalletImp$_fun__internal_transfer_validate((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $JettonWalletImp$_fun__internal_transfer_estimate_remain_value
((int, slice, slice), int) $JettonWalletImp$_fun__internal_transfer_estimate_remain_value((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $JettonTransferNotification$_constructor_query_id_amount_sender_forward_payload
((int, int, slice, slice)) $JettonTransferNotification$_constructor_query_id_amount_sender_forward_payload(int $query_id, int $amount, slice $sender, slice $forward_payload) inline;

;; $JettonWalletImp$_fun__internal_transfer_notification
((int, slice, slice), ()) $JettonWalletImp$_fun__internal_transfer_notification((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice $to, int $value, int $bounce, int $mode, cell $body) inline;

;; $JettonExcesses$_constructor_query_id
((int)) $JettonExcesses$_constructor_query_id(int $query_id) inline;

;; $JettonWalletImp$_fun__internal_transfer_excesses
((int, slice, slice), ()) $JettonWalletImp$_fun__internal_transfer_excesses((int, slice, slice) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice, int, slice) $msg, int $remain) impure inline;

;; $WalletData$_constructor_balance_owner_jetton_jetton_wallet_code
((int, slice, slice, cell)) $WalletData$_constructor_balance_owner_jetton_jetton_wallet_code(int $balance, slice $owner, slice $jetton, cell $jetton_wallet_code) inline;

;; $JettonWalletImp$_fun_get_wallet_data
((int, slice, slice), (int, slice, slice, cell)) $JettonWalletImp$_fun_get_wallet_data((int, slice, slice) $self) impure inline_ref;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int $queryId) inline;
