#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_Core.headers.fc";
#include "tact_Core.stdlib.fc";
#include "tact_Core.storage.fc";

;;
;; Contract Core functions
;;

(slice, int, cell) $Core$_contract_init() impure inline_ref {
    var (($self'owner, $self'totalChildContracts, $self'tokenAddresses)) = (null(), null(), null());
    $self'owner = __tact_context_get_sender();
    $self'totalChildContracts = 0;
    return ($self'owner, $self'totalChildContracts, $self'tokenAddresses);
}

((slice, int, cell), slice) $Core$_fun_getTokenAddress((slice, int, cell) $self, int $index) impure inline_ref {
    var (($self'owner, $self'totalChildContracts, $self'tokenAddresses)) = $self;
    var $fresh$ret_24 = __tact_dict_get_int_slice($self'tokenAddresses, 257, $index);
    return (($self'owner, $self'totalChildContracts, $self'tokenAddresses), $fresh$ret_24);
}

((slice, int, cell), int) $Core$_fun_getTotalTokens((slice, int, cell) $self) impure inline_ref {
    var (($self'owner, $self'totalChildContracts, $self'tokenAddresses)) = $self;
    var $fresh$ret_25 = $self'totalChildContracts;
    return (($self'owner, $self'totalChildContracts, $self'tokenAddresses), $fresh$ret_25);
}

((slice, int, cell), slice) $Core$_fun_owner((slice, int, cell) $self) impure inline_ref {
    var (($self'owner, $self'totalChildContracts, $self'tokenAddresses)) = $self;
    var $fresh$ret_26 = $self'owner;
    return (($self'owner, $self'totalChildContracts, $self'tokenAddresses), $fresh$ret_26);
}

;;
;; Receivers of a Contract Core
;;

(((slice, int, cell)), ()) $Core$_internal_binary_DeployJetton((slice, int, cell) $self, (cell, int) $msg) impure inline {
    var ($self'owner, $self'totalChildContracts, $self'tokenAddresses) = $self;
    var ($msg'jettonContent, $msg'initialSupply) = $msg;
    throw_unless(30892, ( __tact_slice_eq_bits($self'owner, __tact_context_get_sender()) ));
    var ($init'code, $init'data) = $Jetton$_init_child(__tact_context_sys, $global_myAddress(), $msg'jettonContent, $msg'initialSupply);
    slice $childAddress = $global_contractAddress(($init'code, $init'data));
    $global_send($SendParameters$_constructor_to_value_mode_code_data_body($childAddress, 100000000, 1, $init'code, $init'data, $DeployJetton$_store_cell($DeployJetton$_constructor_jettonContent_initialSupply($msg'jettonContent, $msg'initialSupply))));
    $self'tokenAddresses~__tact_dict_set_int_slice(257, $self'totalChildContracts, $childAddress);
    $self'totalChildContracts = ($self'totalChildContracts + 1);
    return (($self'owner, $self'totalChildContracts, $self'tokenAddresses), ());
}

(((slice, int, cell)), ()) $Core$_internal_binary_Deploy((slice, int, cell) $self, (int) $deploy) impure inline {
    var ($self'owner, $self'totalChildContracts, $self'tokenAddresses) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'owner, $self'totalChildContracts, $self'tokenAddresses)~$Core$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'owner, $self'totalChildContracts, $self'tokenAddresses), ());
}

;;
;; Get methods of a Contract Core
;;

_ %getTokenAddress(int $index) method_id(87426) {
    int $index = $index;
    var self = $Core$_contract_load();
    var res = self~$Core$_fun_getTokenAddress($index);
    return res;
}

_ %getTotalTokens() method_id(90836) {
    var self = $Core$_contract_load();
    var res = self~$Core$_fun_getTotalTokens();
    return res;
}

_ %owner() method_id(83229) {
    var self = $Core$_contract_load();
    var res = self~$Core$_fun_owner();
    return res;
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract Core
;;

((slice, int, cell), int) $Core$_contract_router_internal((slice, int, cell) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive DeployJetton message
    if (op == 2023116568) {
        var msg = in_msg~$DeployJetton$_load();
        self~$Core$_internal_binary_DeployJetton(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$Core$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $Core$_contract_load();
    
    ;; Handle operation
    int handled = self~$Core$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $Core$_contract_store(self);
}
